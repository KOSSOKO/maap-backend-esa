spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true 
spring.jpa.hibernate.use-new-id-generator-mappings=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.type=TRACE

spring.jpa.properties.hibernate.type=trace 

spring.datasource.url= 
spring.datasource.username=
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect



#Geoserver url dev
geoserver.url=

#Geoserver datadir
geoserver.datadir=

#Geoserver credentials
geoserver.username=
geoserver.password=

#Geoserver workspace
geoserver.workspace=

#Gitlab url
gitlab.server.admin.token=
#gitlab.server.admin.token=
#external url
gitlab.server.url=

#Data storage location
datasource.dataDirectory=

gitlab.server.admin.token=
#gitlab.server.admin.token=
#external url
gitlab.server.url=
#gitlab.server.url=
#gitlab.server.admin.token=
#gitlab.server.admin.token=

#Gitlab user management
gitlab.user.management.password=

#bucketS3 url
bucketS3.url=

pythonserver.url=
pythonserver.datadir=/app/Campaign_data

pythonserver.enable=false
#Simple the best should be to create 2 instance of DataProcesingInterface and use a property to choose the right bean
pythonserver.datastats.mock={"data":{"band":[{"bandName":"1","stats":[{"minimum":"0.0"},{"maximum":"1.0"},{"average":"0.5"},{"standard_deviation":"0.2"}]}]}}

#Should not be put true in git to be secure
CMR.ingestion.enable=false

CMR.ingestion.log=false
CMR.search.enable=false
